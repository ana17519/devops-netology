apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-multi-network-task1
  labels:
    app: nginx-multi-network
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-multi-network
  template:
    metadata:
      labels:
        app: nginx-multi-network
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
      - name: network-multitool
        image: wbitt/network-multitool
        env:
        - name: HTTP_PORT
          value: "8080"
        ports:
        - containerPort: 8080
          name: http-port
        resources:
          requests:
            cpu: "1m"
            memory: "20Mi"
          limits:
            cpu: "10m"
            memory: "20Mi"
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
---
#по порту 9001 —
#`nginx` 80, по 9002 — `multitool` 8080.
apiVersion: v1
kind: Service
metadata:
  name: nginx-multi-network-task1-s
  namespace: default
spec:
  selector:
    app: nginx-multi-network
  ports:
  type: ClusterIP
  ports:
  - port: 9001
    targetPort: 80
    protocol: TCP
    name: port-1
  - port: 9002
    targetPort: 8080
    protocol: TCP
    name: port-2
#    kubectl expose deployment/nginx-multitool-deployment - название deployment
#    kubectl describe svc nginx-multitool-deployment

# Running the multitool on Kubernetes using the POD network is as simple as:
# kubectl run nginx-multi-network-task1-p --image wbitt/network-multitool
#  kubectl exec --stdin --tty nginx-multi-network-task1-p -- /bin/bash

#[имя сервиса].[пространство имен = default].[сервис = svc].[общий суффикс для кластера = cluster.local]
# curl nginx-multi-network-task1-s.default.svc.cluster.local